/*
 * MS4525DO.c
 *
 *  Created on: Oct 26, 2024
 *      Author: chant
 */
#include "MS4525DO.h"

// Use the handle for the UART you configured (e.g., huart2)
extern UART_HandleTypeDef huart1;

int _write(int file, char *data, int len) {
    // Transmit data via UART
    HAL_UART_Transmit(&huart1, (uint8_t*)data, len, HAL_MAX_DELAY);
    return len;
}

void read_MS4525DO(){
	//MS4525DO_t MS4525DO_data;
	I2C_HandleTypeDef i2cHandle;
	uint8_t data_buffer[4]; //data buffer to store raw I2C data
	HAL_StatusTypeDef status = readI2CData(&i2cHandle, ADDRESS_I2C_MS4525DO, data_buffer, 4);
#ifdef VERBOSE_MODE_EN
	printf("--------I2C HAL STATUS--------\n");
    if (status == HAL_OK) {
        printf("HAL_OK\n");
    } else if (status == HAL_ERROR) {
    	printf("HAL_ERROR\n");
    } else if (status == HAL_BUSY) {
    	printf("HAL_BUSY\n");
    } else if (status == HAL_TIMEOUT) {
        printf("HAL_TIMEOUT\n");
    }
#endif
}

HAL_StatusTypeDef readI2CData(I2C_HandleTypeDef *hi2c, uint16_t deviceAddr, uint8_t *pData, uint16_t size) {
    HAL_StatusTypeDef status;
    status = HAL_I2C_Master_Receive(hi2c, deviceAddr, pData, size, HAL_MAX_DELAY);
    return status;
}
