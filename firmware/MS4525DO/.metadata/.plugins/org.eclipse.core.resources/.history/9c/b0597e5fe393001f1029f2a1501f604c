/*
 * MS4525DO.h
 *
 *  Created on: Oct 26, 2024
 *      Author: chant
 */

//Datasheet: https://www.te.com/commerce/DocumentDelivery/DDEController?Action=showdoc&DocId=Data+Sheet%7FMS4525DO%7FB10%7Fpdf%7FEnglish%7FENG_DS_MS4525DO_B10.pdf%7FCAT-BLPS0002
/*Differential Pressure Transducer 2024/2025 (PN): MS4525DO-DS3BK001DPL*/

#ifndef INC_MS4525DO_H_
#define INC_MS4525DO_H_

/*Includes*/
#include "stm32f1xx_hal.h" /* Needed for I2C */
#include <math.h>

/*MACRO DEFINITIONS*/
//(Insert calibration offset macros - if needed)
/*MS4525DO CONFIGURATION PARAMETERS*/
#define TYPE_MS4525DO     		(bool)     0 /*1 - Type A, 0 - Type B*/
#define PMAX_PSI_MS4525DO 		(double)   1 //casted to double for transfer function
#define PMIN_PSI_MS4525DO 		(double)   -1
#define AIR_DENSITY_MS4525DO 	(double) 1.225 //kg/m^3

/*Structures*/
/*MS4525DO Sensor Package*/
struct data_t {
	uint8_t status;
    struct raw_t {
        uint16_t pressure;
        uint16_t temperature;
    } raw;
    /*Processed data - underwent conversions to engineering values and calibrations*/
    struct processed_t {
        double pressure_psi; /*range: [-1,1], steps at  */
        double temperature_C; /*range: []*/
        double airspeed_ms; /*range: */
    } processed;
};

/*To enumerate status codes returned by the MS4525DO*/
struct status_t {
	uint8_t normal 		= 0; //Normal operation, good packet
	uint8_t reserved 	= 1; //Reserved
	uint8_t stale 		= 2; //Stale Data
	uint8_t fault 		= 3; //Fault detected
};

/*Updates the MS4525DO sensor data*/
void update_MS4525DO_data();

/*Fetches the current MS4525DO sensor data*/
data_t fetch_MS4525DO_data();


/*Lower Level Functions - I2C, CAN*/



#endif /* INC_MS4525DO_H_ */
