/*
 * MS4525DO.h
 *
 *  Created on: Oct 26, 2024
 *      Author: chant
 */

//Datasheet: https://www.te.com/commerce/DocumentDelivery/DDEController?Action=showdoc&DocId=Data+Sheet%7FMS4525DO%7FB10%7Fpdf%7FEnglish%7FENG_DS_MS4525DO_B10.pdf%7FCAT-BLPS0002
/*Differential Pressure Transducer Used for 2024/2025 (PN): MS4525DO-DS3BK001DPL*/

#ifndef INC_MS4525DO_H_
#define INC_MS4525DO_H_

/*Includes*/
#include "stm32f1xx_hal.h" /* Needed for I2C */
#include <math.h>
#include <stdio.h>
#include <stdbool.h> // Provides bool, true, and false
/*MACRO DEFINITIONS*/
/*MS4525DO CONFIGURATION PARAMETERS*/
#define TYPE_MS4525DO     		(bool)     0 /*1 - Type A, 0 - Type B*/
#define PMAX_PSI_MS4525DO 		(double)   1 //casted to double for transfer function
#define PMIN_PSI_MS4525DO 		(double)   -1
#define ADDRESS_I2C_MS4525DO 	(uint8_t) 0x46
/*PROCESSING MACROS*/
#define AIR_DENSITY			 	(double) 1.225 //kg/m^3
//this is where to include the calibration macros if needed, to generalize wind tunnel calibration process

#define VERBOSE_MODE_EN //uncomment to enable verbose debug mode

/*STRUCTURES AND ENUMERATORS*/
/*MS4525DO Data Package*/
struct MS4525DO_t {
	bool data_is_good;
	uint8_t sensor_status;
    struct raw_t {
        uint16_t pressure;
        uint16_t temperature;
    } raw;
    /*Processed data - underwent conversions to engineering values and calibrations*/
    struct processed_t {
        double pressure_psi; /*range: [-1,1], steps at  */
        double temperature_C; /*range: []*/
        double airspeed_ms; /*range: */
    } processed;
};
/*Enumerate status codes returned by the MS4525DO*/
typedef enum {
	normal,
	reserved,
	stale,
	fault
} sensor_status_t;

int _write(int file, char *data, int len); //An overload so printf() can be associated with serial print

void MS4525DO_assignI2C(I2C_HandleTypeDef *hi2c_device);
struct MS4525DO_t read_MS4525DO(MS4525DO_t *MS4525DO_package);

#endif /* INC_MS4525DO_H_ */
